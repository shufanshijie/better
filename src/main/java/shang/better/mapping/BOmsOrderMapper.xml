<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shang.better.dao.BOmsOrderMapper">
	<resultMap id="BOrderResultMap" type="shang.better.model.BOmsOrder">
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="lot_no" jdbcType="INTEGER" property="lotNo" />
		<result column="order_name" jdbcType="VARCHAR" property="orderName" />
		<collection property="orderDtls" ofType="shang.better.model.TOmsOrderDtl" resultMap="OrderDtlResultMap"></collection>
	</resultMap>
	<resultMap id="OrderDtlResultMap" type="shang.better.model.TOmsOrderDtl">
		<result column="order_dtl_id" jdbcType="INTEGER" property="id" />
		<result column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="lot_no" jdbcType="INTEGER" property="lotNo" />
		<result column="product_id" jdbcType="INTEGER" property="productId" />
		<result column="product_name" jdbcType="VARCHAR" property="productName" />
	</resultMap>
	 <select id="selectBOmsOrderById" parameterType="java.lang.Integer" resultMap="BOrderResultMap">
		select o.id,o.lot_no,o.order_name ,d.id order_dtl_id,d.lot_no,d.order_id,d.product_id,d.product_name from t_oms_order o ,t_oms_order_dtl d 
			where o.id = d.order_id and o.id = #{id,jdbcType=INTEGER}
	 </select>
	
</mapper>
